cmake_minimum_required(VERSION 3.21)
project(OmegaEngine)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${PROJECT_SOURCE_DIR}/cmake")

if (WIN32)
	foreach( OUTPUTCONFIGNAME ${CMAKE_CONFIGURATION_TYPES} )
    	string( TOUPPER ${OUTPUTCONFIGNAME} OUTPUTCONFIG )

		if( CMAKE_SIZEOF_VOID_P EQUAL 8 )
			set( CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${OmegaEngine_SOURCE_DIR}/Bin64-${OUTPUTCONFIGNAME} )
			set( CMAKE_LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${OmegaEngine_SOURCE_DIR}/Bin64-${OUTPUTCONFIGNAME} )
			set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${OmegaEngine_SOURCE_DIR}/Bin64-${OUTPUTCONFIGNAME} )
		else( CMAKE_SIZEOF_VOID_P EQUAL 8 )
			set( CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${OmegaEngine_SOURCE_DIR}/Bin-${OUTPUTCONFIGNAME} )
			set( CMAKE_LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${OmegaEngine_SOURCE_DIR}/Bin-${OUTPUTCONFIGNAME} )
			set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${OmegaEngine_SOURCE_DIR}/Bin-${OUTPUTCONFIGNAME} )
		endif( CMAKE_SIZEOF_VOID_P EQUAL 8 )

	endforeach( OUTPUTCONFIGNAME CMAKE_CONFIGURATION_TYPES )
else (WIN32)
	SET( LIBRARY_OUTPUT_PATH $ENV{HOME}/lib)
endif (WIN32)

add_subdirectory(Engine)
add_subdirectory(Demo)
